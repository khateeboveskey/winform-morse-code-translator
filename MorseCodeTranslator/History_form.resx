<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>